#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Перем ПараметрыЗапуска;
	
	Если ( ПустаяСтрока(ПараметрЗапуска) ) Тогда
		
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;

	Если ( СоздатьПервогоАдминистратораПриНеобходимости("Администратор", ПараметрЗапуска) ) Тогда
		
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;
	
	ПараметрыЗапуска = ПараметрыЗапуска( ПараметрЗапуска );
	
	СоздатьПользователейJson( ПараметрыЗапуска );

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СоздатьПервогоАдминистратораПриНеобходимости( Имя, ПараметрЗапуска )
	 
	Перем СоздаватьАдминистратора;
	Перем Администратор;
	
	Если ( ПользователиИнформационнойБазы.ПолучитьПользователей().Количество() > 0 ) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	СоздаватьАдминистратора = ( СтрНайти(ВРег(ПараметрЗапуска), "CREATEADMIN") > 0 
									ИЛИ СтрНайти(ВРег(ПараметрЗапуска), "СОЗДАТЬАДМИНИСТРАТОРА") > 0
									И Метаданные.Роли.Найти("ПолныеПрава") <> Неопределено );
	
	Если ( НЕ СоздаватьАдминистратора ) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Администратор = ПользователиИнформационнойБазы.СоздатьПользователя();
	Администратор.Имя = Имя;
	Администратор.АутентификацияСтандартная = Истина;
	Администратор.ПоказыватьВСпискеВыбора = Истина;
	Администратор.ПолноеИмя = Имя;
	Администратор.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
	Администратор.Язык = Метаданные.Языки.Русский;
	Администратор.Записать();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СоздатьПользователейJson( Знач ПараметрыЗапуска )
	
	Перем ПутьКФайлу;
	Перем Файл;
	
	ПутьКФайлу = ПараметрыЗапуска.Получить( "USERS-FROM-JSON" );
	
	Если ( ПутьКФайлу = Неопределено ) Тогда
		
		Возврат;
	
	КонецЕсли;
		
//	Файл = Файл( ПутьКФайлу );
	Файл = Новый Файл( ПутьКФайлу );
	
	Если ( НЕ Файл.Существует() ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// TODO прочитать и создать
	
КонецПроцедуры

//&НаКлиенте
//Функция Файл( Знач ПутьКФайлу )
//
//#Если ВебКлиент Тогда
//
//	Возврат Новый Файл( ПутьКФайлу );
//
//#Иначе
//
//	// Для совместимости до 8.3.6
//	Если ( Найти(ПутьКФайлу, "./") > 0 ИЛИ Найти(ПутьКФайлу, ".\") > 0 ) Тогда
//		
//		ПутьКФайлу = АбсолютныйПутьКФайлу( ПутьКФайлу );
//		
//	КонецЕсли; 
//
//	Возврат Новый Файл( ПутьКФайлу );
//
//#КонецЕсли
//
//КонецФункции

//#Если НЕ ВебКлиент Тогда
//
//&НаКлиенте
//Функция АбсолютныйПутьКФайлу( Знач ПутьКФайлу )
//	
//	Перем ИмяВременногоФайлаКоманда;
//	Перем ИмяВременногоФайлаРезультатКоманды;
//	Перем Команда;
//	Перем ЗаписьТекста;
//	Перем Текст;
//	Перем Код;
//	Перем Результат;
//	
//	ИмяВременногоФайлаКоманда = ПолучитьИмяВременногоФайла( "cmd" );
//	ИмяВременногоФайлаРезультатКоманды = ПолучитьИмяВременногоФайла( "txt" );
//
//	Команда = "@echo on
//			  |for %%f in ( """ + ПутьКФайлу + """ ) do set fullname=%%~ff
//											   |echo %fullname% > " + ИмяВременногоФайлаРезультатКоманды;
//
//	ЗаписьТекста = Новый ЗаписьТекста( ИмяВременногоФайлаКоманда, "UTF-8", , Ложь );
//	ЗаписьТекста.ЗаписатьСтроку( Команда );
//	ЗаписьТекста.Закрыть();
//	
//	Результат = ПутьКФайлу;
//
//	Код = -1;
//	ЗапуститьПриложение( ИмяВременногоФайлаКоманда, , Истина, Код );
//	
//	Если ( Код <> 0 ) Тогда
//		
//		Возврат Результат;
//		
//	КонецЕсли;
//	
//	Текст = Новый ЧтениеТекста();
//	Текст.Открыть( ИмяВременногоФайлаРезультатКоманды, "UTF-8" );
//
//	Пока ( Истина ) Цикл
//		
//		Строка = Текст.ПрочитатьСтроку();
//		
//		Если ( Строка = Неопределено ) Тогда
//			
//			Прервать;
//			
//		КонецЕсли;
//
//		Если ( СокрЛП(Строка) = "" ) Тогда
//			
//			Продолжить;
//			
//		КонецЕсли;
//		
//		Результат = Строка;
//
//	КонецЦикла;
//
//	Текст.Закрыть();
//	УдалитьФайлы( ИмяВременногоФайлаКоманда );
//	УдалитьФайлы( ИмяВременногоФайлаРезультатКоманды );
//
//	Возврат Результат;
//	
//КонецФункции
//
//#КонецЕсли

&НаКлиенте
Функция ПараметрыЗапуска( Знач ПараметрЗапуска )

	Перем ПараметрыЗапуска;
	Перем ЭлементыПараметра;
	Перем Результат;
	
	СОДЕРЖИТ_КЛЮЧ_И_ЗНАЧЕНИЕ = 2;
	
	Результат = Новый Соответствие();
	
	ПараметрыЗапуска = СтрРазделить( ПараметрЗапуска, ";", Ложь );
	
	Для Каждого Параметр Из ПараметрыЗапуска Цикл
		
		ЭлементыПараметра = СтрРазделить( Параметр, "=", Ложь );
		
		Если ( ЗначениеЗаполнено(ЭлементыПараметра) ) Тогда
			
			Если ( ЭлементыПараметра.Количество() = 1 ) Тогда
				
				Результат.Вставить(ВРег(ЭлементыПараметра[0]));
				Продолжить;
				
			КонецЕсли;
			
			Если ( ЭлементыПараметра.Количество() = СОДЕРЖИТ_КЛЮЧ_И_ЗНАЧЕНИЕ ) Тогда
				
				Результат.Вставить(ВРег(ЭлементыПараметра[0]), ЭлементыПараметра[1]);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти