#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Перем ПараметрыЗапуска;
	
	Если ( ПустаяСтрока(ПараметрЗапуска) ) Тогда
		
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;

	Если ( СоздатьПервогоАдминистратораПриНеобходимости("Администратор", ПараметрЗапуска) ) Тогда
		
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;
	
	ПараметрыЗапуска = ПараметрыЗапуска( ПараметрЗапуска );
	
	СоздатьПользователейИзФайлаJson( ПараметрыЗапуска );

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Если НЕ ВебКлиент Тогда
	
&НаКлиенте
Функция ПрочитатьДанныеИзФайлаJson( Знач Файл )
	
	Перем Результат;
	Перем ЧтениеJson;
	
	Попытка
	
		ЧтениеJson = Новый ЧтениеJSON();
		ЧтениеJson.ОткрытьФайл( Файл.ПолноеИмя );
		Результат = ПрочитатьJSON( ЧтениеJson, Ложь );
		ЧтениеJson.Закрыть();
		
	Исключение
		
		ЧтениеJson = Неопределено;
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли

&НаКлиенте
Функция ПараметрыЗапуска( Знач ПараметрЗапуска )

	Перем ПараметрыЗапуска;
	Перем ЭлементыПараметра;
	Перем Результат;
	
	СОДЕРЖИТ_КЛЮЧ_И_ЗНАЧЕНИЕ = 2;
	
	Результат = Новый Соответствие();
	
	ПараметрыЗапуска = СтрРазделить( ПараметрЗапуска, ";", Ложь );
	
	Для Каждого Параметр Из ПараметрыЗапуска Цикл
		
		ЭлементыПараметра = СтрРазделить( Параметр, "=", Ложь );
		
		Если ( ЗначениеЗаполнено(ЭлементыПараметра) ) Тогда
			
			Если ( ЭлементыПараметра.Количество() = 1 ) Тогда
				
				Результат.Вставить(ВРег(ЭлементыПараметра[0]));
				Продолжить;
				
			КонецЕсли;
			
			Если ( ЭлементыПараметра.Количество() = СОДЕРЖИТ_КЛЮЧ_И_ЗНАЧЕНИЕ ) Тогда
				
				Результат.Вставить(ВРег(ЭлементыПараметра[0]), ЭлементыПараметра[1]);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьПервогоАдминистратораПриНеобходимости( Имя, ПараметрЗапуска )
	 
	Перем СоздаватьАдминистратора;
	Перем Администратор;
	
	Если ( ПользователиИнформационнойБазы.ПолучитьПользователей().Количество() > 0 ) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	СоздаватьАдминистратора = ( СтрНайти(ВРег(ПараметрЗапуска), "CREATEADMIN") > 0 
									ИЛИ СтрНайти(ВРег(ПараметрЗапуска), "СОЗДАТЬАДМИНИСТРАТОРА") > 0
									И Метаданные.Роли.Найти("ПолныеПрава") <> Неопределено );
	
	Если ( НЕ СоздаватьАдминистратора ) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Администратор = ПользователиИнформационнойБазы.СоздатьПользователя();
	Администратор.Имя = Имя;
	Администратор.АутентификацияСтандартная = Истина;
	Администратор.ПоказыватьВСпискеВыбора = Истина;
	Администратор.ПолноеИмя = Имя;
	Администратор.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
	Администратор.Язык = Метаданные.Языки.Русский;
	Администратор.Записать();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СоздатьПользователейИзФайлаJson( Знач ПараметрыЗапуска )
	
	Перем ПутьКФайлу;
	Перем Файл;
	Перем ДанныеИзФайла;
	Перем Пользователи;
	
	ПутьКФайлу = ПараметрыЗапуска.Получить( "USERS-FROM-JSON" );
	
	Если ( ПутьКФайлу = Неопределено ) Тогда
		
		Возврат;
	
	КонецЕсли;
		
	Файл = Новый Файл( ПутьКФайлу );
	
	Если ( НЕ Файл.Существует() ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
#Если НЕ ВебКлиент Тогда
	
	ДанныеИзФайла = ПрочитатьДанныеИзФайлаJson(Файл);
	
#Иначе
	
	ДанныеИзФайла = Неопределено;
	
#КонецЕсли

	ДанныеИзФайла.Свойство("users", Пользователи );
	
	Если ( Пользователи <> Неопределено ) Тогда
		
		СоздатьПользователей( Пользователи );
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьПользователей( Знач Пользователи )
	
	
	
КонецПроцедуры


#КонецОбласти